// Configuration file for chain growth algorithm

// directory for data output
outputDirectory = "/home/eugene/Output/gabaMaturation100217/";

// network parameters
networkParameters = 
{
    N_RA = 300; // number of HVC(RA) neurons in the network
    N_TR = 4; // number of training HVC(RA) neurons
    N_I = 100; // number of HVC(I) neurons in the network
}

// synaptic dynamics
synapticParameters = 
{
    Nss = 4; // maximum number of supersynapses allowed

    R = 1.0; // learning rate

    A_P = 0.000025; // LTP constant
    A_D = 0.000025; // LTD constant
    F_0 = 1.2; // punishment for synchronous firing
    T_P = 10.0; // best LTP time
    T_D = 10.0; // best LTD time
    TAU_P = 30.0; // LTP time scale
    TAU_D = 30.0; // LTD time scale

    BETA = 0.9999; // potentiation decay parameter for active and silent synapses
    BETA_SUPERSYNAPSE = 0.9999; // potentiation decay parameter for supersynapses

    ACTIVATION_THRESHOLD = 0.0005; // threshold for synapse activation
    SUPERSYNAPSE_THRESHOLD = 0.015; // threshold for supersynapse activation
    WEIGHT_MAX = 0.050; // max synaptic weight

    STDP_WINDOW = 100.0; // window in which spikes count for STDP rules

};

// spatial neuron location and their connectivity
spatialParameters = 
{
    SIDE = 100.0; // size of HVC modeled (square)
    MIN_INTERNEURON_DISTANCE = 0.01; // minimum allowed distance between neurons

    A_RA2I = 5.0; // constant for HVC(RA) -> HVC(I) connections
    SIGMA_RA2I = 8.0; // standard deviation for HVC(RA) -> HVC(I) connections
    B_I2RA = 5.0; // constant for HVC(I) -> HVC(RA) connections
    SIGMA_I2RA = 6.0; // standard deviation for HVC(I) -> HVC(RA) connections
    Gei_mean = 0.25; // mean of HVC(RA) -> HVC(I) synaptic strength
    Gei_std = 0.0; // standard deviation of HVC(RA) -> HVC(I) synaptic strength
    Gie_mean = 0.2; // mean of HVC(I) -> HVC(RA) synaptic strength
    Gie_std = 0.0; // standard deviation of HVC(I) -> HVC(RA) synaptic strength

};

// parameters for neuron maturation
gabaParameters = 
{
    E_GABA_MATURE = -80.0; // GABA reverse potential for mature neurons
    E_GABA_IMMATURE = -55.0; // GABA reverse potential for fully immature neurons

    GABA_RATE_THRESHOLD = 0.05; // burst firing threshold for decreasing GABA reverse potential
    MATURATION_RATE_THRESHOLD = 0.9; // burst firing threshold for turning neuron into mature state
    DEATH_RATE_THRESHOLD = 0.01; // burst firing threshold for turning neuron into dead state

    RATE_WINDOW_SHORT = 50; // small time window for calculating "instantaneous" firing rate
    RATE_WINDOW_LONG = 500; // large time window for calculating "average" firing rate for a long time period 
    
    GABA_DOWN = 0.065; // constant for GABA reverse potential decrease, when neuron firing rate exceeds GABA_RATE_THRESHOLD


};

// trial parameters
timeParameters = 
{
    timestep = 0.02; // step for solving neuron dynamics in ms
    network_update_frequency = 0.1; // frequency of gathering spike information from all neurons in the networks
    trial_duration = 1000.0; // trial duration in s
    WAITING_TIME = 200.0; // waiting time after trial start before current is injected to training neurons (neurons receive only noise input)

};

// parameters for noise input to the neurons
noiseParameters = 
{
    white_noise_mean_soma = 0.0; // mean of the white noise current injected to soma
    white_noise_std_soma = 100.0; // standard deviation of the white noise current injected to soma
    white_noise_mean_dend = 0.0; // mean of the white noise current injected to dendrite
    white_noise_std_dend = 200.0; // standard deviation of the white noise current injected to dendrite
};
